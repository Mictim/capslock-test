name: Playwright Tests

on:
  push:
    branches: [ main, master, feature/* ]
  pull_request:
    branches: [ main, master ]

permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  test:
    name: Run Playwright Tests
    timeout-minutes: 60
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-node@v4
      with:
        node-version: lts/*
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps
    
    - name: Run Playwright tests
      run: npm run test
      continue-on-error: true
    
    - name: Generate Axe Report
      if: always()
      run: npm run report:axe
    
    - name: Upload Playwright Report as Artifact
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 30
    
    - name: Upload Axe Report as Artifact
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: axe-report
        path: axe-playwright-report/
        retention-days: 30
    
    - name: Prepare reports for Pages
      if: always()
      run: |
        mkdir -p public
        cp -r playwright-report/* public/
        if [ -d "axe-playwright-report" ]; then
          mkdir -p public/axe
          cp -r axe-playwright-report/* public/axe/
        fi
        echo "Reports prepared in public directory"
    
    - name: Setup Pages
      if: always() && github.ref == 'refs/heads/main'
      uses: actions/configure-pages@v4
    
    - name: Upload Pages artifact
      if: always() && github.ref == 'refs/heads/main'
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./public

  deploy:
    name: Deploy to GitHub Pages
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4